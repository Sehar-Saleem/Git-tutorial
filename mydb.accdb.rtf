{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red57\green192\blue38;\red56\green185\blue199;
\red202\green51\blue35;}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c25706\c77963\c19557;\cssrgb\c25546\c77007\c82023;
\cssrgb\c83899\c28663\c18026;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 Set path variable for psql: Psql\
\
Last login: Tue Oct  3 18:47:44 on ttys019\
\

\f1\b \cf3 \uc0\u10140   \cf4 Sequelize
\f0\b0 \cf2  cd ~\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  ls\

\f1\b \cf4 Applications
\f0\b0 \cf2                   
\f1\b \cf4 Pictures
\f0\b0 \cf2 \

\f1\b \cf4 Desktop
\f0\b0 \cf2                        
\f1\b \cf4 Postman
\f0\b0 \cf2 \

\f1\b \cf4 Documents
\f0\b0 \cf2                      
\f1\b \cf4 Public
\f0\b0 \cf2 \

\f1\b \cf4 Downloads
\f0\b0 \cf2                      
\f1\b \cf4 mongodb
\f0\b0 \cf2 \

\f1\b \cf4 Library
\f0\b0 \cf2                        
\f1\b \cf4 mongodb-macos-aarch64-7.0.1
\f0\b0 \cf2 \

\f1\b \cf4 Movies
\f0\b0 \cf2                         mongodb-macos-arm64-7.0.1.tgz\

\f1\b \cf4 Music
\f0\b0 \cf2                          
\f1\b \cf4 projects
\f0\b0 \cf2 \

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  cd /usr \

\f1\b \cf3 \uc0\u10140   \cf4 /usr
\f0\b0 \cf2  open .\

\f1\b \cf3 \uc0\u10140   \cf4 /usr
\f0\b0 \cf2  cd ..\

\f1\b \cf3 \uc0\u10140   \cf4 /
\f0\b0 \cf2  pwd\
/\

\f1\b \cf3 \uc0\u10140   \cf4 /
\f0\b0 \cf2  open .\

\f1\b \cf3 \uc0\u10140   \cf4 /
\f0\b0 \cf2  cd ~    \

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  nano .zshrc \

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  source .zshrc \

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql --version\
psql (PostgreSQL) 16.0\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -u algolix -p\
psql: invalid option -- u\
psql: hint: Try "psql --help" for more information.\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql --help\
psql is the PostgreSQL interactive terminal.\
\
Usage:\
  psql [OPTION]... [DBNAME [USERNAME]]\
\
General options:\
  -c, --command=COMMAND    run only single command (SQL or internal) and exit\
  -d, --dbname=DBNAME      database name to connect to (default: "algolix")\
  -f, --file=FILENAME      execute commands from file, then exit\
  -l, --list               list available databases, then exit\
  -v, --set=, --variable=NAME=VALUE\
                           set psql variable NAME to VALUE\
                           (e.g., -v ON_ERROR_STOP=1)\
  -V, --version            output version information, then exit\
  -X, --no-psqlrc          do not read startup file (~/.psqlrc)\
  -1 ("one"), --single-transaction\
                           execute as a single transaction (if non-interactive)\
  -?, --help[=options]     show this help, then exit\
      --help=commands      list backslash commands, then exit\
      --help=variables     list special variables, then exit\
\
Input and output options:\
  -a, --echo-all           echo all input from script\
  -b, --echo-errors        echo failed commands\
  -e, --echo-queries       echo commands sent to server\
  -E, --echo-hidden        display queries that internal commands generate\
  -L, --log-file=FILENAME  send session log to file\
  -n, --no-readline        disable enhanced command line editing (readline)\
  -o, --output=FILENAME    send query results to file (or |pipe)\
  -q, --quiet              run quietly (no messages, only query output)\
  -s, --single-step        single-step mode (confirm each query)\
  -S, --single-line        single-line mode (end of line terminates SQL command)\
\
Output format options:\
  -A, --no-align           unaligned table output mode\
      --csv                CSV (Comma-Separated Values) table output mode\
  -F, --field-separator=STRING\
                           field separator for unaligned output (default: "|")\
  -H, --html               HTML table output mode\
  -P, --pset=VAR[=ARG]     set printing option VAR to ARG (see \\pset command)\
  -R, --record-separator=STRING\
                           record separator for unaligned output (default: newline)\
  -t, --tuples-only        print rows only\
  -T, --table-attr=TEXT    set HTML table tag attributes (e.g., width, border)\
  -x, --expanded           turn on expanded table output\
  -z, --field-separator-zero\
                           set field separator for unaligned output to zero byte\
  -0, --record-separator-zero\
                           set record separator for unaligned output to zero byte\
\
Connection options:\
  -h, --host=HOSTNAME      database server host or socket directory (default: "local socket")\
  -p, --port=PORT          database server port (default: "5432")\
  -U, --username=USERNAME  database user name (default: "algolix")\
  -w, --no-password        never prompt for password\
  -W, --password           force password prompt (should happen automatically)\
\
For more information, type "\\?" (for internal commands) or "\\help" (for SQL\
commands) from within psql, or consult the psql section in the PostgreSQL\
documentation.\
\
Report bugs to <pgsql-bugs@lists.postgresql.org>.\
PostgreSQL home page: <https://www.postgresql.org/>\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -W\
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  password authentication failed for user "algolix"\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U root -W   \
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  password authentication failed for user "root"\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -W\
Password: \
psql (16.0)\
Type "help" for help.\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# whoami\
postgres-# ;\
ERROR:  syntax error at or near "whoami"\
LINE 1: whoami\
        ^\
postgres=# whoami;\
ERROR:  syntax error at or near "whoami"\
LINE 1: whoami;\
        ^\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -W\
Password: \

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -W \
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "algolix" does not exist\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -W\
Password: \
psql (16.0)\
Type "help" for help.\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -W \
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "algolix" does not exist\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -W\
Password: \
psql (16.0)\
Type "help" for help.\
\
postgres=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -W \
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: fe_sendauth: no password supplied\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -W\
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "algolix" does not exist\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix   \
Password for user algolix: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "algolix" does not exist\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix\
Password for user algolix: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  password authentication failed for user "algolix"\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres\
Password for user postgres: \
psql (16.0)\
Type "help" for help.\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# /dt\
postgres-# ;\
ERROR:  syntax error at or near "/"\
LINE 1: /dt\
        ^\
postgres=# /d;\
ERROR:  syntax error at or near "/"\
LINE 1: /d;\
        ^\
postgres=# /dt;\
ERROR:  syntax error at or near "/"\
LINE 1: /dt;\
        ^\
postgres=# \\dt;\
Did not find any relations.\
postgres=# \\d;\
invalid command \\d;\
Try \\? for help.\
postgres=# \\dt+;\
Did not find any relations.\
postgres=# \\l;\
invalid command \\l;\
Try \\? for help.\
postgres=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -d Sequelize\
Password for user postgres: \
psql (16.0)\
Type "help" for help.\
\
Sequelize=# \\dt;\
             List of relations\
 Schema |     Name      | Type  |  Owner   \
--------+---------------+-------+----------\
 public | SequelizeMeta | table | postgres\
 public | channel       | table | postgres\
 public | user          | table | postgres\
 public | video         | table | postgres\
(4 rows)\
\
Sequelize=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -D Sequelize \
psql: invalid option -- D\
psql: hint: Try "psql --help" for more information.\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -d Sequelize\
Password for user algolix: \
psql (16.0)\
Type "help" for help.\
\
Sequelize=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix -W           \
Password: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "algolix" does not exist\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres             \
Password for user postgres: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  password authentication failed for user "postgres"\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U algolix \
Password for user algolix: \
psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "algolix" does not exist\

\f1\b \cf5 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres\
Password for user postgres: \
psql (16.0)\
Type "help" for help.\
\
postgres=# help\
You are using psql, the command-line interface to PostgreSQL.\
Type:  \\copyright for distribution terms\
       \\h for help with SQL commands\
       \\? for help with psql commands\
       \\g or terminate with semicolon to execute query\
       \\q to quit\
postgres=# \\h\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# select * from role;\
ERROR:  relation "role" does not exist\
LINE 1: select * from role;\
                      ^\
postgres=# \\d user;\
Did not find any relation named "user".\
postgres=# \\d;\
invalid command \\d;\
Try \\? for help.\
postgres=# /d user;\
ERROR:  syntax error at or near "/"\
LINE 1: /d user;\
        ^\
postgres=# /d;\
ERROR:  syntax error at or near "/"\
LINE 1: /d;\
        ^\
postgres=# \\d;\
invalid command \\d;\
Try \\? for help.\
postgres=# \\d\
Did not find any relations.\
postgres=# \\d user\
Did not find any relation named "user".\
postgres=# \\dt user\
Did not find any relation named "user".\
postgres=# \\l\
postgres=# \\du\
                             List of roles\
 Role name |                         Attributes                         \
-----------+------------------------------------------------------------\
 algolix   | Superuser, Create role, Create DB, Replication\
 postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS\
\
postgres=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -d postgres\
Password for user postgres: \
psql (16.0)\
Type "help" for help.\
\
postgres=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
postgres=# \\du\
                             List of roles\
 Role name |                         Attributes                         \
-----------+------------------------------------------------------------\
 algolix   | Superuser, Create role, Create DB, Replication\
 postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS\
\
postgres=# \\dt\
Did not find any relations.\
postgres=# ^D\\q\

\f1\b \cf3 \uc0\u10140   \cf4 ~
\f0\b0 \cf2  psql -U postgres -d Sequelize\
Password for user postgres: \
psql (16.0)\
Type "help" for help.\
\
Sequelize=# \\dt\
             List of relations\
 Schema |     Name      | Type  |  Owner   \
--------+---------------+-------+----------\
 public | SequelizeMeta | table | postgres\
 public | channel       | table | postgres\
 public | user          | table | postgres\
 public | video         | table | postgres\
(4 rows)\
\
Sequelize=# \\d channel\
                                       Table "public.channel"\
   Column   |           Type           | Collation | Nullable |               Default               \
------------+--------------------------+-----------+----------+-------------------------------------\
 id         | integer                  |           | not null | nextval('channel_id_seq'::regclass)\
 name       | character varying(255)   |           | not null | \
 user_id    | integer                  |           | not null | \
 created_at | timestamp with time zone |           | not null | \
 updated_at | timestamp with time zone |           | not null | \
Indexes:\
    "channel_pkey" PRIMARY KEY, btree (id)\
Foreign-key constraints:\
    "channel_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "user"(id)\
Referenced by:\
    TABLE "video" CONSTRAINT "video_channel_id_fkey" FOREIGN KEY (channel_id) REFERENCES channel(id)\
\
Sequelize=# \\d user\
                                       Table "public.user"\
   Column   |           Type           | Collation | Nullable |             Default              \
------------+--------------------------+-----------+----------+----------------------------------\
 id         | integer                  |           | not null | nextval('user_id_seq'::regclass)\
 name       | character varying(255)   |           | not null | \
 email      | character varying(255)   |           | not null | \
 created_at | timestamp with time zone |           | not null | \
 updated_at | timestamp with time zone |           | not null | \
Indexes:\
    "user_pkey" PRIMARY KEY, btree (id)\
    "user_email_key" UNIQUE CONSTRAINT, btree (email)\
Referenced by:\
    TABLE "channel" CONSTRAINT "channel_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "user"(id)\
\
Sequelize=# select * from user;\
   user   \
----------\
 postgres\
(1 row)\
\
Sequelize=# select * from public.user;\
 id | name | email | created_at | updated_at \
----+------+-------+------------+------------\
(0 rows)\
\
Sequelize=# insert into public.user values('sehar', 'sehar.algolix@gmail.com');\
ERROR:  invalid input syntax for type integer: "sehar"\
LINE 1: insert into public.user values('sehar', 'sehar.algolix@gmail...\
                                       ^\
Sequelize=# insert into public.user values("sehar", "sehar.algolix@gmail.com");\
ERROR:  column "sehar" does not exist\
LINE 1: insert into public.user values("sehar", "sehar.algolix@gmail...\
                                       ^\
Sequelize=# insert into public.user(name,email) values("sehar", "sehar.algolix@gmail.com");\
ERROR:  column "sehar" does not exist\
LINE 1: insert into public.user(name,email) values("sehar", "sehar.a...\
                                                   ^\
Sequelize=# insert into public.user(name,email) values ("sehar", "sehar.algolix@gmail.com");\
ERROR:  column "sehar" does not exist\
LINE 1: insert into public.user(name,email) values ("sehar", "sehar....\
                                                    ^\
Sequelize=# insert into public.user(name,email) values ('sehar', 'sehar.algolix@gmail.com');\
ERROR:  null value in column "created_at" of relation "user" violates not-null constraint\
DETAIL:  Failing row contains (1, sehar, sehar.algolix@gmail.com, null, null).\
Sequelize=# insert into public.user(name,email,created_at) values ('sehar', 'sehar.algolix@gmail.com', now());\
ERROR:  null value in column "updated_at" of relation "user" violates not-null constraint\
DETAIL:  Failing row contains (2, sehar, sehar.algolix@gmail.com, 2023-10-04 13:33:21.299132+05, null).\
Sequelize=# insert into public.user values ('sehar', 'sehar.algolix@gmail.com', now(),now());\
ERROR:  invalid input syntax for type integer: "sehar"\
LINE 1: insert into public.user values ('sehar', 'sehar.algolix@gmai...\
                                        ^\
Sequelize=# insert into public.user(name,email,created_at,updated_at) values ('sehar', 'sehar.algolix@gmail.com', now(),now());\
INSERT 0 1\
Sequelize=# select * from public.user\
Sequelize-# ;\
 id | name  |          email          |          created_at           |          updated_at           \
----+-------+-------------------------+-------------------------------+-------------------------------\
  3 | sehar | sehar.algolix@gmail.com | 2023-10-04 13:34:01.582726+05 | 2023-10-04 13:34:01.582726+05\
(1 row)\
\
Sequelize=# delete from public.user where id=3;\
DELETE 1\
Sequelize=# insert into public.user(name,email,created_at,updated_at) values ('sehar', 'sehar.algolix@gmail.com', now(),now());\
INSERT 0 1\
Sequelize=# select * from public.user;\
 id | name  |          email          |          created_at           |          updated_at           \
----+-------+-------------------------+-------------------------------+-------------------------------\
  4 | sehar | sehar.algolix@gmail.com | 2023-10-04 13:34:54.432651+05 | 2023-10-04 13:34:54.432651+05\
(1 row)\
\
Sequelize=# \\d channel\
                                       Table "public.channel"\
   Column   |           Type           | Collation | Nullable |               Default               \
------------+--------------------------+-----------+----------+-------------------------------------\
 id         | integer                  |           | not null | nextval('channel_id_seq'::regclass)\
 name       | character varying(255)   |           | not null | \
 user_id    | integer                  |           | not null | \
 created_at | timestamp with time zone |           | not null | \
 updated_at | timestamp with time zone |           | not null | \
Indexes:\
    "channel_pkey" PRIMARY KEY, btree (id)\
Foreign-key constraints:\
    "channel_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "user"(id)\
Referenced by:\
    TABLE "video" CONSTRAINT "video_channel_id_fkey" FOREIGN KEY (channel_id) REFERENCES channel(id)\
\
Sequelize=# insert into channel(name,user_id,created_at,updated_at) values('Programming',4,now(),now());\
INSERT 0 1\
Sequelize=# select * from channel;\
 id |    name     | user_id |          created_at           |          updated_at           \
----+-------------+---------+-------------------------------+-------------------------------\
  1 | Programming |       4 | 2023-10-04 13:36:00.814739+05 | 2023-10-04 13:36:00.814739+05\
(1 row)\
\
Sequelize=# delete from public.user where id=3;\
DELETE 0\
Sequelize=# delete from public.user where id=4;\
ERROR:  update or delete on table "user" violates foreign key constraint "channel_user_id_fkey" on table "channel"\
DETAIL:  Key (id)=(4) is still referenced from table "channel".\
Sequelize=# drop video;\
ERROR:  syntax error at or near "video"\
LINE 1: drop video;\
             ^\
Sequelize=# drop table video;\
DROP TABLE\
Sequelize=# drop table user;\
ERROR:  syntax error at or near "user"\
LINE 1: drop table user;\
                   ^\
Sequelize=# drop table public.user;\
ERROR:  cannot drop table "user" because other objects depend on it\
DETAIL:  constraint channel_user_id_fkey on table channel depends on table "user"\
HINT:  Use DROP ... CASCADE to drop the dependent objects too.\
Sequelize=# drop table public.user CASCADE;\
NOTICE:  drop cascades to constraint channel_user_id_fkey on table channel\
DROP TABLE\
\
Sequelize=# \\d\
               List of relations\
 Schema |      Name      |   Type   |  Owner   \
--------+----------------+----------+----------\
 public | SequelizeMeta  | table    | postgres\
 public | channel        | table    | postgres\
 public | channel_id_seq | sequence | postgres\
(3 rows)\
\
Sequelize=# select * from channel;\
 id |    name     | user_id |          created_at           |          updated_at           \
----+-------------+---------+-------------------------------+-------------------------------\
  1 | Programming |       4 | 2023-10-04 13:36:00.814739+05 | 2023-10-04 13:36:00.814739+05\
(1 row)\
\
Sequelize=# \\d channel;\
                                       Table "public.channel"\
   Column   |           Type           | Collation | Nullable |               Default               \
------------+--------------------------+-----------+----------+-------------------------------------\
 id         | integer                  |           | not null | nextval('channel_id_seq'::regclass)\
 name       | character varying(255)   |           | not null | \
 user_id    | integer                  |           | not null | \
 created_at | timestamp with time zone |           | not null | \
 updated_at | timestamp with time zone |           | not null | \
Indexes:\
    "channel_pkey" PRIMARY KEY, btree (id)\
\
Sequelize=# pwd\
Sequelize-# \
}